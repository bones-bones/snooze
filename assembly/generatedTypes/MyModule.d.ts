type i8 = number;
type i16 = number;
type i32 = number;
type i64 = bigint;
type isize = number;
type u8 = number;
type u16 = number;
type u32 = number;
type u64 = bigint;
type usize = number;
type f32 = number;
type f64 = number;
type bool = boolean | number;
export function allOnes(): void;
export function readWasmMemoryAndReturnIndexOne(): u8;
export function add(a: i32, b: i32): i32;
export function getColorDistance(r: u32, g: u32, b: u32, r2: u32, g2: u32, b2: u32): u32;
export function averageOfTheTwo(leftArray: usize, rightArray: usize, _width: u32, degree?: f32): usize;
export var Uint8ClampedArray_ID: u32;
export function cartoon(inputArray: usize, threshold: u32): usize;
export function hardRGB(array: usize): usize;
export const memory: WebAssembly.Memory;
export function __new(size: usize, id: u32): usize;
export function __pin(ptr: usize): usize;
export function __unpin(ptr: usize): void;
export function __collect(): void;
export const __rtti_base: usize;
export const __setArgumentsLength: ((n: i32) => void) | undefined;
